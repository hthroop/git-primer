{
  "hash": "c2e1463a15061c2fe71a8ad81256c523",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  revealjs: \n    theme:\n    - dark\n    - custom.scss\n---\n\n\n::: custom_title\n\nversion control with git <span style=\"color:#f34c26\">{{< fa brands git-alt size=1x >}}</span> and GitHub <span style=\"color:#74C0FC\">{{< fa brands github size=1x >}}</span>\n\n:::\n\n\n```{mermaid}\n%%| label: opening-slide\n%%| fig-width: 10000000\n%%{init: { 'logLevel': 'debug', 'theme': 'dark' , 'themeVariables': {\n'commitLabelFontSize': '16px'\n} } }%%\ngitGraph\n  commit id: \"initialize\"\n  commit id: \"add README\"\n  commit id: \"add model\"\n  branch microbial\n  checkout microbial\n  commit id: \"microbial params\"\n  branch chemistry\n  checkout chemistry\n  commit id: \"chemistry params\"\n  checkout microbial\n  merge chemistry\n  checkout main\n  merge microbial\n  commit id: \"one-pool model\"\n```\n\n\n\n##  {#what_is_it data-menu-title=\"what is it\"}\n\n\n**what it is:**\n\n  * an [open-source]{style=\"color: yellow;\"}, [distributed]{style=\"color: yellow;\"} version control system designed for [speed and efficiency]{style=\"color: yellow;\"}[^1]\n\n<br>\n\n**what it does:**\n\n  * watches repositories (like a directory) for changes\n  \n  * asks that you describe changes when they are made\n  \n  * identifies conflicts, and forces you to resolve them\n\n\n[^1]: [introduction-to-git](https://speakerdeck.com/schacon/introduction-to-git?slide=13)\n\n\n## {#git_github data-menu-title=\"github is not git\" .center}\n\n:::{.r-stack}\n\n<span style=\"color:#f34c26\">{{< fa brands git-alt size=5x >}}</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<span style=\"font-size:100px;\">!=</span>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<span style=\"color:#74C0FC\">{{< fa brands github size=5x >}}</span>\n\n:::\n\n\n## {#not_just_github data-menu-title=\"not just github\" .center}\n\n:::{.r-stack}\n\n<span style=\"color:#f34c26\">{{< fa brands gitlab size=5x >}}</span>\n<span style=\"color:#f34c26\">{{< fa brands github size=5x >}}</span>\n<span style=\"color:#74C0FC\">{{< fa brands bitbucket size=5x >}}</span>\n\n:::\n\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.\n\n## Bullets\n\nWhen you click the **Render** button a document will be generated that includes:\n\n-   Content authored with markdown\n-   Output from executable code\n\n## Code\n\nWhen you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n",
    "supporting": [
      "git_primer_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}